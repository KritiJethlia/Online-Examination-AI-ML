{"ast":null,"code":"var _jsxFileName = \"/home/kriti/Online-Examination-AI-ML/src/input.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { questions } from './data/constants.js';\nimport Clock from './Clock';\nimport history from './history.js';\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeInput = (e, index) => {\n      this.ans[index] = e.target.value;\n      window.localStorage.setItem('answer', JSON.stringify(this.ans));\n      window.localStorage.setItem('qorder', JSON.stringify(this.qid));\n    };\n\n    this.onSubmit = e => {\n      console.log('submitting...');\n      axios.post('http://localhost:5000/ans', {\n        ans: window.localStorage.getItem('answer'),\n        ques: window.localStorage.getItem('qorder')\n      }).then(response => {\n        history.push('/result');\n      });\n    };\n\n    this.state = {\n      q: [],\n      id: [],\n      a: [],\n      count: 600\n    };\n    this.ques = [];\n    this.ans = [];\n    this.qid = [];\n  }\n\n  handleStart() {\n    this.timer = setInterval(() => {\n      const newCount = this.state.count - 1;\n      this.setState({\n        count: newCount >= 0 ? newCount : 0\n      });\n    }, 1000);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/getQuestions').then(response => {\n      response.data.map((query, index) => {\n        this.qid[index] = query.id;\n        this.ques[index] = query.quest;\n      });\n      this.setState({\n        q: this.ques,\n        id: this.qid\n      });\n    });\n    this.handleStart();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Clock, {\n      time: this.state.count,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }\n    }), this.state.q.map((quest, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, \"Q\", index + 1, \" : \", quest), this.ans[index] = \" \", /*#__PURE__*/React.createElement(\"textarea\", {\n        name: \"second\",\n        rows: \"5\",\n        cols: \"100\",\n        title: \"Answer\",\n        onChange: e => this.onChangeInput(e, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 14\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nexport default Input;","map":{"version":3,"sources":["/home/kriti/Online-Examination-AI-ML/src/input.js"],"names":["React","axios","questions","Clock","history","Input","Component","constructor","props","onChangeInput","e","index","ans","target","value","window","localStorage","setItem","JSON","stringify","qid","onSubmit","console","log","post","getItem","ques","then","response","push","state","q","id","a","count","handleStart","timer","setInterval","newCount","setState","componentDidMount","get","data","map","query","quest","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {questions} from './data/constants.js';\nimport Clock from './Clock';\nimport history from './history.js';\n \n class Input extends React.Component{\n     constructor(props){\n         super(props);\n         this.state ={\n             q:[],\n             id:[],\n             a:[],\n             count: 600,\n         }\n         this.ques =[];\n         this.ans =[];\n         this.qid=[];\n     }\n\n     handleStart() {\n        this.timer = setInterval(() => {\n          const newCount = this.state.count - 1;\n          this.setState(\n            {count: newCount >= 0 ? newCount : 0}\n          );\n        }, 1000);\n      } \n\n     componentDidMount(){\n         axios.get('http://localhost:5000/getQuestions')\n         .then(response =>{\n             response.data.map((query,index)=>{\n                 this.qid[index]=query.id;\n                 this.ques[index]=query.quest;\n             })\n             this.setState({q:this.ques, id: this.qid})\n         })\n         this.handleStart();\n     }\n     onChangeInput=(e,index)=>{\n         this.ans[index] =e.target.value;\n        window.localStorage.setItem('answer',JSON.stringify(this.ans) );\n        window.localStorage.setItem('qorder',JSON.stringify(this.qid) );\n     }\n     onSubmit=(e)=>{\n         console.log('submitting...')\n        axios.post('http://localhost:5000/ans', {ans: window.localStorage.getItem('answer') ,ques :window.localStorage.getItem('qorder')})\n    .then(response => {\n      history.push('/result');\n    })\n     }\n     render()\n     {\n         return(\n             <div>\n                 <Clock time={this.state.count}/>\n            {\n                this.state.q.map((quest ,index)=>{\n                    return(\n                        <div>\n                       \n                        <h3>Q{index+1} : {quest}</h3>\n                        {\n                            \n                            this.ans[index]=\" \"\n                        }\n                        <textarea name=\"second\" rows=\"5\" cols=\"100\" title=\"Answer\" onChange={(e)=>this.onChangeInput(e,index)} ></textarea>\n                        <br></br>\n                        <br></br>\n                        </div>\n                    );\n                })\n            }\n             \n             <br></br>\n             <button type=\"button\" className=\"btn btn-primary\" onClick={this.onSubmit}>Submit</button>\n             </div>\n         );\n     }\n }\n export default Input;"]},"metadata":{},"sourceType":"module"}