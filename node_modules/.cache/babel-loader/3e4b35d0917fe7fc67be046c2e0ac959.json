{"ast":null,"code":"var _jsxFileName = \"/home/kriti/Online-Examination-AI-ML/src/Clock.js\";\nimport React from 'react';\nexport default class Clock extends React.Component {\n  format(time) {\n    let seconds = time % 60;\n    let minutes = Math.floor(time / 60);\n    minutes = minutes.toString().length === 1 ? \"0\" + minutes : minutes;\n    seconds = seconds.toString().length === 1 ? \"0\" + seconds : seconds;\n    return minutes + ':' + seconds;\n  }\n\n  render() {\n    const {\n      time\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"displayedTime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, this.format(time)));\n  }\n\n}","map":{"version":3,"sources":["/home/kriti/Online-Examination-AI-ML/src/Clock.js"],"names":["React","Clock","Component","format","time","seconds","minutes","Math","floor","toString","length","render","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AACjDC,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,QAAIC,OAAO,GAAGD,IAAI,GAAG,EAArB;AACA,QAAIE,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAG,EAAlB,CAAd;AACAE,IAAAA,OAAO,GAAGA,OAAO,CAACG,QAAR,GAAmBC,MAAnB,KAA8B,CAA9B,GAAkC,MAAMJ,OAAxC,GAAkDA,OAA5D;AACAD,IAAAA,OAAO,GAAGA,OAAO,CAACI,QAAR,GAAmBC,MAAnB,KAA8B,CAA9B,GAAkC,MAAML,OAAxC,GAAkDA,OAA5D;AACA,WAAOC,OAAO,GAAG,GAAV,GAAgBD,OAAvB;AACD;;AACDM,EAAAA,MAAM,GAAI;AACR,UAAM;AAACP,MAAAA;AAAD,QAAS,KAAKQ,KAApB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKT,MAAL,CAAYC,IAAZ,CAAL,CADF,CADF;AAKD;;AAfgD","sourcesContent":["import React from 'react';\nexport default class Clock extends React.Component {\n  format(time) {\n    let seconds = time % 60;\n    let minutes = Math.floor(time / 60);\n    minutes = minutes.toString().length === 1 ? \"0\" + minutes : minutes;\n    seconds = seconds.toString().length === 1 ? \"0\" + seconds : seconds;\n    return minutes + ':' + seconds;\n  }\n  render () {\n    const {time} = this.props;\n    return (\n      <div className=\"displayedTime\">\n        <h1>{this.format(time)}</h1>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}