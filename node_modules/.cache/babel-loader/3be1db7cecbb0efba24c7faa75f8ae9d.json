{"ast":null,"code":"var _jsxFileName = \"/home/kriti/Online-Examination-AI-ML/src/QuestionInput.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class QInput extends Component {\n  constructor() {\n    super();\n\n    this.appendKey = () => {\n      this.setState({\n        keywords: [...this.state.keywords, this.state.currkey],\n        currkey: \"\"\n      });\n    };\n\n    this.appendSent = () => {\n      this.setState({\n        keysentences: [...this.state.keysentences, this.state.currsent],\n        currsent: \"\"\n      });\n    };\n\n    this.onInputChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        keywords: [...this.state.keywords, this.state.currkey],\n        keysentences: [...this.state.keysentences, this.state.currsent]\n      }, () => {\n        this.setState({\n          keywords: [...this.state.keywords, Number(this.state.syn)]\n        }, () => {\n          var temp1 = this.state.keywords.filter(i => i !== '');\n          var temp2 = this.state.keysentences.filter(i => i !== '');\n          this.setState({\n            keywords: temp1,\n            keysentences: temp2\n          }, () => {\n            axios.post('http://localhost:5000/enterQuestions', {\n              question: this.state.question,\n              keyw: this.state.keywords,\n              keysent: this.state.keysentences\n            }).then(alert(\"Added to the database\")).then(this.setState({\n              question: '',\n              keywords: [],\n              keysentences: [],\n              currkey: '',\n              currsent: '',\n              syn: ''\n            }));\n          });\n        });\n      });\n    };\n\n    this.state = {\n      keywords: [],\n      keysentences: [],\n      question: '',\n      currkey: '',\n      currsent: '',\n      syn: ''\n    };\n  }\n\n  removeKey(value) {\n    var array = [...this.state.keywords]; // make a separate copy of the array\n\n    if (value !== -1) {\n      array.splice(value, 1);\n      this.setState({\n        keywords: array\n      });\n    }\n  }\n\n  removeSent(value) {\n    var array = [...this.state.keysentences]; // make a separate copy of the array\n\n    if (value !== -1) {\n      array.splice(value, 1);\n      this.setState({\n        keysentences: array\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Instructions For Setting Questions:\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \" Enter the question in the given space along with the keywords and key sentences expected in the answer.\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \"While entering the Keywords remember not to leave spaces behind it.\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"Split hyphenated words into two words example carbon,dioxide. Alternatively you can include them in sentences part.\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"Also enter the number of synonyms in the key words\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Key sentences should be short and without any punctuations.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group col-15\",\n      style: {\n        padding: \"20px\",\n        margin: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"exampleFormControlTextarea1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"Enter Question:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"question\",\n      rows: \"2\",\n      cols: \"100\",\n      class: \"form-control\",\n      value: this.state.question,\n      placeholder: \"Type a Question.\",\n      onChange: this.onInputChange,\n      value: this.state.question,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, this.state.question), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      role: \"form\",\n      autoComplete: \"off\",\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"entry input-group d-flex align-items-center mb-1 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"currkey\",\n      onChange: this.onInputChange,\n      value: this.state.currkey,\n      type: \"text\",\n      placeholder: \"Enter Keywords\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success btn-add m-1 plusButton\",\n      type: \"button\",\n      onClick: this.appendKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"glyphicon glyphicon-plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, \"+\")))), this.state.keywords.map((value, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"entry input-group d-flex align-items-center mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control urlfield\",\n        name: \"fields[]\",\n        rows: \"1\",\n        type: \"text\",\n        key: index,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }\n      }, value), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"input-group-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-danger btn-add m-1 plusButton\",\n        type: \"button\",\n        onClick: () => {\n          this.removeKey(index);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"glyphicon glyphicon-minus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 33\n        }\n      }, \"-\")))));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-17\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"syn\",\n      onChange: this.onInputChange,\n      value: this.state.syn,\n      type: \"text\",\n      placeholder: \"Number of Synonyms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"entry input-group d-flex align-items-center mb-1 col \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control \",\n      name: \"currsent\",\n      onChange: this.onInputChange,\n      value: this.state.currsent,\n      type: \"text\",\n      placeholder: \"Enter Key Sentences\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success btn-add m-1 plusButton\",\n      type: \"button\",\n      onClick: this.appendSent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"glyphicon glyphicon-plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, \"+\")))), this.state.keysentences.map((value, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"entry input-group d-flex align-items-center mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control urlfield \",\n        name: \"fields[]\",\n        rows: \"1\",\n        type: \"text\",\n        key: index,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 33\n        }\n      }, value), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"input-group-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-danger btn-add m-1 plusButton\",\n        type: \"button\",\n        onClick: () => {\n          this.removeSent(index);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"glyphicon glyphicon-minus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 33\n        }\n      }, \"-\")))));\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, \"Submit\"))));\n  }\n\n}","map":{"version":3,"sources":["/home/kriti/Online-Examination-AI-ML/src/QuestionInput.js"],"names":["React","Component","axios","QInput","constructor","appendKey","setState","keywords","state","currkey","appendSent","keysentences","currsent","onInputChange","e","target","name","value","onSubmit","Number","syn","temp1","filter","i","temp2","post","question","keyw","keysent","then","alert","removeKey","array","splice","removeSent","render","padding","margin","map","index"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport axios from 'axios';\n\nexport default class QInput extends Component{\n    constructor()\n    {\n        super();\n        this.state={\n            keywords:[],\n            keysentences:[],\n            question:'',\n            currkey:'',\n            currsent:'',\n            syn:'',\n        }\n\n    }\n\n    appendKey=()=>\n    {\n        this.setState({\n            keywords :[...this.state.keywords,this.state.currkey], currkey:\"\",\n        })\n    }\n    appendSent=()=>\n    {\n        this.setState({\n            keysentences :[...this.state.keysentences,this.state.currsent], currsent:\"\",\n        })\n    }\n    removeKey(value) {\n        var array = [...this.state.keywords]; // make a separate copy of the array\n        if (value !== -1) {\n          array.splice(value, 1);\n          this.setState({keywords: array});\n        }\n      }\n    removeSent(value) {\n        var array = [...this.state.keysentences]; // make a separate copy of the array\n        if (value !== -1) {\n          array.splice(value, 1);\n          this.setState({keysentences: array});\n        }\n      }\n    onInputChange=(e)=>{\n        this.setState({[e.target.name]:e.target.value});\n      }\n    onSubmit=()=>{\n        this.setState({\n            keywords :[...this.state.keywords,this.state.currkey],\n            keysentences :[...this.state.keysentences,this.state.currsent],\n        },()=>{\n        this.setState({keywords :[...this.state.keywords,Number(this.state.syn)]},()=>{\n        var temp1= this.state.keywords.filter(i=> i!=='');\n        var temp2= this.state.keysentences.filter(i=> i!=='')\n        this.setState({\n            keywords: temp1,\n            keysentences: temp2,\n        },()=>{\n            axios.post('http://localhost:5000/enterQuestions',{question:this.state.question,keyw :this.state.keywords,keysent :this.state.keysentences })\n            .then(alert(\"Added to the database\"))\n            .then(this.setState(\n                {\n                    question:'',\n                    keywords:[],\n                    keysentences:[],\n                    currkey:'',\n                    currsent:'',\n                    syn:''\n                }\n            ))\n        })\n    })\n    })\n    }\n    render()\n    {\n        return(\n            <div > \n            <div>\n                <h3>\n                Instructions For Setting Questions:\n                </h3>\n                <h4> Enter the question in the given space along with the keywords and key sentences expected in the answer.</h4>\n                <h4>While entering the Keywords remember not to leave spaces behind it.</h4>\n                <h4>Split hyphenated words into two words example carbon,dioxide. Alternatively you can include them in sentences part.</h4>\n                <h4>Also enter the number of synonyms in the key words</h4>\n                <h4>Key sentences should be short and without any punctuations.</h4>\n                <br></br>\n                <div class=\"form-group col-15\" style={{padding: \"20px\",margin: \"50px\"}}>\n                    <label for=\"exampleFormControlTextarea1\">Enter Question:</label>\n                    <textarea name='question' rows=\"2\" cols=\"100\" class=\"form-control\" value={this.state.question} placeholder=\"Type a Question.\" onChange={this.onInputChange} value={this.state.question} >{this.state.question}</textarea>\n                    <br></br>\n                    <form role=\"form\" autoComplete=\"off\" className=\"form-row\">\n                        <div className=\"col-4\">\n                        <div className=\"entry input-group d-flex align-items-center mb-1 \">  \n                        <input className=\"form-control\" name=\"currkey\"onChange={this.onInputChange} value={this.state.currkey}   type=\"text\" placeholder=\"Enter Keywords\" />\n                        <span className=\"input-group-btn\">\n                        <button className=\"btn btn-success btn-add m-1 plusButton\" type=\"button\" onClick={this.appendKey}>\n                        <span className=\"glyphicon glyphicon-plus\">+</span>\n                        </button>\n                        </span>\n                        </div>\n                        {\n                            this.state.keywords.map((value,index)=>{\n                                return(\n                                <div key={index}>\n                                <div className=\"entry input-group d-flex align-items-center mb-1\">\n                                <textarea className=\"form-control urlfield\" name=\"fields[]\" rows=\"1\" type=\"text\" key={index} disabled>{value}</textarea>        \n                                <span className=\"input-group-btn\">\n                                <button className=\"btn btn-danger btn-add m-1 plusButton\" type=\"button\"  onClick={()=>{this.removeKey(index)}}>\n                                <span className=\"glyphicon glyphicon-minus\">-</span>\n                                </button>\n                                </span>\n                                </div>\n                                </div>\n                                );\n                                })\n                        }\n                        </div>\n                        <div className=\"col-17\">\n                        <input className=\"form-control\" name=\"syn\"onChange={this.onInputChange} value={this.state.syn}   type=\"text\" placeholder=\"Number of Synonyms\" />\n                        </div>\n                        <div className=\"col\">\n                        <div className=\"entry input-group d-flex align-items-center mb-1 col \">  \n                        <input className=\"form-control \" name=\"currsent\" onChange={this.onInputChange} value={this.state.currsent}   type=\"text\" placeholder=\"Enter Key Sentences\" />\n                        <span className=\"input-group-btn\">\n                        <button className=\"btn btn-success btn-add m-1 plusButton\" type=\"button\" onClick={this.appendSent}>\n                        <span className=\"glyphicon glyphicon-plus\">+</span>\n                        </button>\n                        </span>\n                        </div>\n                        {\n                            this.state.keysentences.map((value,index)=>{\n                                return(\n                                <div key={index}>\n                                <div className=\"entry input-group d-flex align-items-center mb-1\">\n                                <textarea className=\"form-control urlfield \" name=\"fields[]\" rows=\"1\" type=\"text\" key={index} disabled>{value}</textarea>        \n                                <span className=\"input-group-btn\">\n                                <button className=\"btn btn-danger btn-add m-1 plusButton\" type=\"button\"  onClick={()=>{this.removeSent(index)}}>\n                                <span className=\"glyphicon glyphicon-minus\">-</span>\n                                </button>\n                                </span>\n                                </div>\n                                </div>\n                                );\n                                })\n                        }\n                        </div>\n                    </form>\n                    <br></br>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.onSubmit}>Submit</button>\n            </div>\n            </div>\n            </div>\n        )\n        \n    }\n}"]},"metadata":{},"sourceType":"module"}