{"ast":null,"code":"var _jsxFileName = \"/home/kriti/Online-Examination-AI-ML/src/input.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { questions } from './data/constants.js';\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onMinChange = e => {\n      this.setState({\n        minutes: e.target.value\n      });\n    };\n\n    this.tick = () => {\n      var min = Math.floor(this.secondsRemaining);\n      var sec = this.secondsRemaining - min * 60;\n      this.setState({\n        minutes: min,\n        seconds: sec\n      });\n\n      if (sec < 10) {\n        this.setState({\n          seconds: \"0\" + this.state.seconds\n        });\n      }\n\n      if (min < 10) {\n        this.setState({\n          value: \"0\" + min\n        });\n      }\n\n      if (min === 0 & sec === 0) {\n        clearInterval(this.intervalHandle);\n      }\n\n      this.secondsRemaining--;\n    };\n\n    this.startCountDown = () => {\n      this.intervalHandle = setInterval(this.tick, 1000);\n      let time = this.state.minutes;\n      this.secondsRemaining = time * 60;\n    };\n\n    this.onChangeInput = (e, index) => {\n      this.ans[index] = e.target.value;\n      window.localStorage.setItem('answer', JSON.stringify(this.ans));\n      window.localStorage.setItem('qorder', JSON.stringify(this.qid));\n    };\n\n    this.onSubmit = e => {\n      console.log('submitting...');\n      axios.post('http://localhost:5000/ans', {\n        ans: window.localStorage.getItem('answer'),\n        ques: window.localStorage.getItem('qorder')\n      }).then(response => {\n        console.log('Registered');\n      });\n    };\n\n    this.state = {\n      q: [],\n      id: [],\n      a: [],\n      seconds: '00',\n      minutes: '10'\n    };\n    this.ques = [];\n    this.ans = [];\n    this.qid = [];\n    this.secondsRemaining;\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/getQuestions').then(response => {\n      response.data.map((query, index) => {\n        this.qid[index] = query.id;\n        this.ques[index] = query.quest;\n      });\n      this.setState({\n        q: this.ques,\n        id: this.qid\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        fontSize: 50,\n        marginLeft: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 18\n      }\n    }, this.props.minutes, \":\", this.props.seconds), this.startCountDown(), this.state.q.map((quest, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, \"Q\", index + 1, \" : \", quest), this.ans[index] = \" \", /*#__PURE__*/React.createElement(\"textarea\", {\n        name: \"second\",\n        rows: \"5\",\n        cols: \"100\",\n        title: \"Answer\",\n        onChange: e => this.onChangeInput(e, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 14\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nexport default Input;","map":{"version":3,"sources":["/home/kriti/Online-Examination-AI-ML/src/input.js"],"names":["React","axios","questions","Input","Component","constructor","props","onMinChange","e","setState","minutes","target","value","tick","min","Math","floor","secondsRemaining","sec","seconds","state","clearInterval","intervalHandle","startCountDown","setInterval","time","onChangeInput","index","ans","window","localStorage","setItem","JSON","stringify","qid","onSubmit","console","log","post","getItem","ques","then","response","q","id","a","componentDidMount","get","data","map","query","quest","render","fontSize","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,qBAAxB;;AAEC,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAclBC,WAdkB,GAcLC,CAAD,IAAK;AACd,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAEF,CAAC,CAACG,MAAF,CAASC;AADR,OAAd;AAGF,KAlBiB;;AAAA,SAoBlBC,IApBkB,GAoBZ,MACN;AACI,UAAIC,GAAG,GAAEC,IAAI,CAACC,KAAL,CAAW,KAAKC,gBAAhB,CAAT;AACA,UAAIC,GAAG,GAAG,KAAKD,gBAAL,GAAyBH,GAAG,GAAG,EAAzC;AACA,WAAKL,QAAL,CAAc;AACXC,QAAAA,OAAO,EAAEI,GADE;AAEXK,QAAAA,OAAO,EAAED;AAFE,OAAd;;AAIC,UAAIA,GAAG,GAAG,EAAV,EAAc;AACZ,aAAKT,QAAL,CAAc;AACZU,UAAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWD;AADd,SAAd;AAGD;;AACD,UAAIL,GAAG,GAAG,EAAV,EAAc;AACV,aAAKL,QAAL,CAAc;AAChBG,UAAAA,KAAK,EAAE,MAAME;AADG,SAAd;AAGH;;AACD,UAAIA,GAAG,KAAK,CAAR,GAAYI,GAAG,KAAK,CAAxB,EAA2B;AACzBG,QAAAA,aAAa,CAAC,KAAKC,cAAN,CAAb;AACC;;AACD,WAAKL,gBAAL;AACN,KA1CiB;;AAAA,SA2CnBM,cA3CmB,GA2CJ,MACf;AACK,WAAKD,cAAL,GAAsBE,WAAW,CAAC,KAAKX,IAAN,EAAY,IAAZ,CAAjC;AACA,UAAIY,IAAI,GAAG,KAAKL,KAAL,CAAWV,OAAtB;AACA,WAAKO,gBAAL,GAAwBQ,IAAI,GAAG,EAA/B;AACJ,KAhDkB;;AAAA,SA4DlBC,aA5DkB,GA4DJ,CAAClB,CAAD,EAAGmB,KAAH,KAAW;AACrB,WAAKC,GAAL,CAASD,KAAT,IAAiBnB,CAAC,CAACG,MAAF,CAASC,KAA1B;AACDiB,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,EAAqCC,IAAI,CAACC,SAAL,CAAe,KAAKL,GAApB,CAArC;AACAC,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,EAAqCC,IAAI,CAACC,SAAL,CAAe,KAAKC,GAApB,CAArC;AACF,KAhEiB;;AAAA,SAiElBC,QAjEkB,GAiER3B,CAAD,IAAK;AACV4B,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACDpC,MAAAA,KAAK,CAACqC,IAAN,CAAW,2BAAX,EAAwC;AAACV,QAAAA,GAAG,EAAEC,MAAM,CAACC,YAAP,CAAoBS,OAApB,CAA4B,QAA5B,CAAN;AAA6CC,QAAAA,IAAI,EAAEX,MAAM,CAACC,YAAP,CAAoBS,OAApB,CAA4B,QAA5B;AAAnD,OAAxC,EACHE,IADG,CACEC,QAAQ,IAAI;AAChBN,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,OAHG;AAIF,KAvEiB;;AAEd,SAAKjB,KAAL,GAAY;AACRuB,MAAAA,CAAC,EAAC,EADM;AAERC,MAAAA,EAAE,EAAC,EAFK;AAGRC,MAAAA,CAAC,EAAC,EAHM;AAIR1B,MAAAA,OAAO,EAAC,IAJA;AAKRT,MAAAA,OAAO,EAAC;AALA,KAAZ;AAOA,SAAK8B,IAAL,GAAW,EAAX;AACA,SAAKZ,GAAL,GAAU,EAAV;AACA,SAAKM,GAAL,GAAS,EAAT;AACA,SAAKjB,gBAAL;AACH;;AAqCD6B,EAAAA,iBAAiB,GAAE;AACf7C,IAAAA,KAAK,CAAC8C,GAAN,CAAU,oCAAV,EACCN,IADD,CACMC,QAAQ,IAAG;AACbA,MAAAA,QAAQ,CAACM,IAAT,CAAcC,GAAd,CAAkB,CAACC,KAAD,EAAOvB,KAAP,KAAe;AAC7B,aAAKO,GAAL,CAASP,KAAT,IAAgBuB,KAAK,CAACN,EAAtB;AACA,aAAKJ,IAAL,CAAUb,KAAV,IAAiBuB,KAAK,CAACC,KAAvB;AACH,OAHD;AAIA,WAAK1C,QAAL,CAAc;AAACkC,QAAAA,CAAC,EAAC,KAAKH,IAAR;AAAcI,QAAAA,EAAE,EAAE,KAAKV;AAAvB,OAAd;AACH,KAPD;AAQH;;AAaDkB,EAAAA,MAAM,GACN;AACI,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,UAAU,EAAC;AAA3B,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6C,KAAKhD,KAAL,CAAWI,OAAxD,OAAkE,KAAKJ,KAAL,CAAWa,OAA7E,CADJ,EAEA,KAAKI,cAAL,EAFA,EAIG,KAAKH,KAAL,CAAWuB,CAAX,CAAaM,GAAb,CAAiB,CAACE,KAAD,EAAQxB,KAAR,KAAgB;AAC7B,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAMA,KAAK,GAAC,CAAZ,SAAkBwB,KAAlB,CAFA,EAKI,KAAKvB,GAAL,CAASD,KAAT,IAAgB,GALpB,eAOA;AAAU,QAAA,IAAI,EAAC,QAAf;AAAwB,QAAA,IAAI,EAAC,GAA7B;AAAiC,QAAA,IAAI,EAAC,KAAtC;AAA4C,QAAA,KAAK,EAAC,QAAlD;AAA2D,QAAA,QAAQ,EAAGnB,CAAD,IAAK,KAAKkB,aAAL,CAAmBlB,CAAnB,EAAqBmB,KAArB,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPA,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARA,eASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATA,CADJ;AAaH,KAdD,CAJH,eAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBA,eAsBA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAkD,MAAA,OAAO,EAAE,KAAKQ,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBA,CADJ;AA0BH;;AArG8B;;AAuGnC,eAAehC,KAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {questions} from './data/constants.js'\n \n class Input extends React.Component{\n     constructor(props){\n         super(props);\n         this.state ={\n             q:[],\n             id:[],\n             a:[],\n             seconds:'00',\n             minutes:'10'\n         }\n         this.ques =[];\n         this.ans =[];\n         this.qid=[];\n         this.secondsRemaining;\n     }\n     onMinChange=(e)=>{\n        this.setState({\n            minutes: e.target.value\n        })\n     }\n\n     tick =()=>\n     {\n         var min =Math.floor(this.secondsRemaining);\n         var sec = this.secondsRemaining - (min * 60);\n         this.setState({\n            minutes: min,\n            seconds: sec\n          });\n          if (sec < 10) {\n            this.setState({\n              seconds: \"0\" + this.state.seconds,\n            })\n          }\n          if (min < 10) {\n              this.setState({\n            value: \"0\" + min,\n           })\n          }\n          if (min === 0 & sec === 0) {\n            clearInterval(this.intervalHandle);\n            }\n            this.secondsRemaining--\n     }\n    startCountDown=()=>\n    {\n         this.intervalHandle = setInterval(this.tick, 1000);\n         let time = this.state.minutes;\n         this.secondsRemaining = time * 60;\n    }\n\n     componentDidMount(){\n         axios.get('http://localhost:5000/getQuestions')\n         .then(response =>{\n             response.data.map((query,index)=>{\n                 this.qid[index]=query.id;\n                 this.ques[index]=query.quest;\n             })\n             this.setState({q:this.ques, id: this.qid})\n         })\n     }\n     onChangeInput=(e,index)=>{\n         this.ans[index] =e.target.value;\n        window.localStorage.setItem('answer',JSON.stringify(this.ans) );\n        window.localStorage.setItem('qorder',JSON.stringify(this.qid) );\n     }\n     onSubmit=(e)=>{\n         console.log('submitting...')\n        axios.post('http://localhost:5000/ans', {ans: window.localStorage.getItem('answer') ,ques :window.localStorage.getItem('qorder')})\n    .then(response => {\n      console.log('Registered')\n    })\n     }\n     render()\n     {\n         return(\n             <div>\n                 <h1 style={{ fontSize: 50, marginLeft:100}}>{this.props.minutes}:{this.props.seconds}</h1>\n            {this.startCountDown()}\n            {\n                this.state.q.map((quest ,index)=>{\n                    return(\n                        <div>\n                       \n                        <h3>Q{index+1} : {quest}</h3>\n                        {\n                            \n                            this.ans[index]=\" \"\n                        }\n                        <textarea name=\"second\" rows=\"5\" cols=\"100\" title=\"Answer\" onChange={(e)=>this.onChangeInput(e,index)} ></textarea>\n                        <br></br>\n                        <br></br>\n                        </div>\n                    );\n                })\n            }\n             \n             <br></br>\n             <button type=\"button\" className=\"btn btn-primary\" onClick={this.onSubmit}>Submit</button>\n             </div>\n         );\n     }\n }\n export default Input;"]},"metadata":{},"sourceType":"module"}