{"ast":null,"code":"var _jsxFileName = \"/home/kriti/Online-Examination-AI-ML/src/input.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { questions } from './data/constants.js';\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeInput = (e, index) => {\n      this.ans[index] = e.target.value;\n      window.localStorage.setItem('answer', JSON.stringify(this.ans));\n      window.localStorage.setItem('qorder', JSON.stringify(this.qid));\n    };\n\n    this.onSubmit = e => {\n      console.log('submitting...');\n      axios.post('http://localhost:5000/ans', {\n        ans: window.localStorage.getItem('answer'),\n        ques: window.localStorage.getItem('qorder')\n      }).then(response => {\n        console.log('Registered');\n      });\n    };\n\n    this.state = {\n      q: [],\n      id: [],\n      a: []\n    };\n    this.ques = [];\n    this.ans = [];\n    this.qid = [];\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/getQuestions').then(response => {\n      response.data.map((query, index) => {\n        this.qid[index] = query.id;\n        this.ques[index] = query.quest;\n      });\n      this.setState({\n        q: this.ques,\n        id: this.qid\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }\n    }, this.state.q.map((quest, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, \"Q\", index + 1, \" : \", quest), this.ans[index] = \" \", /*#__PURE__*/React.createElement(\"textarea\", {\n        name: \"second\",\n        rows: \"5\",\n        cols: \"100\",\n        title: \"Answer\",\n        onChange: e => this.onChangeInput(e, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nexport default Input;","map":{"version":3,"sources":["/home/kriti/Online-Examination-AI-ML/src/input.js"],"names":["React","axios","questions","Input","Component","constructor","props","onChangeInput","e","index","ans","target","value","window","localStorage","setItem","JSON","stringify","qid","onSubmit","console","log","post","getItem","ques","then","response","state","q","id","a","componentDidMount","get","data","map","query","quest","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {questions} from './data/constants.js'\n \n class Input extends React.Component{\n     constructor(props){\n         super(props);\n         this.state ={\n             q:[],\n             id:[],\n             a:[],\n         }\n         this.ques =[];\n         this.ans =[];\n         this.qid=[];\n     }\n\n     componentDidMount(){\n         axios.get('http://localhost:5000/getQuestions')\n         .then(response =>{\n             response.data.map((query,index)=>{\n                 this.qid[index]=query.id;\n                 this.ques[index]=query.quest;\n             })\n             this.setState({q:this.ques, id: this.qid})\n         })\n     }\n     onChangeInput=(e,index)=>{\n         this.ans[index] =e.target.value;\n        window.localStorage.setItem('answer',JSON.stringify(this.ans) );\n        window.localStorage.setItem('qorder',JSON.stringify(this.qid) );\n     }\n     onSubmit=(e)=>{\n         console.log('submitting...')\n        axios.post('http://localhost:5000/ans', {ans: window.localStorage.getItem('answer') ,ques :window.localStorage.getItem('qorder')})\n    .then(response => {\n      console.log('Registered')\n    })\n     }\n     render()\n     {\n         return(\n             <div>\n            {\n                this.state.q.map((quest ,index)=>{\n                    return(\n                        <div>\n                       \n                        <h3>Q{index+1} : {quest}</h3>\n                        {\n                            \n                            this.ans[index]=\" \"\n                        }\n                        <textarea name=\"second\" rows=\"5\" cols=\"100\" title=\"Answer\" onChange={(e)=>this.onChangeInput(e,index)} ></textarea>\n                        <br></br>\n                        <br></br>\n                        </div>\n                    );\n                })\n            }\n             \n             <br></br>\n             <button type=\"button\" className=\"btn btn-primary\" onClick={this.onSubmit}>Submit</button>\n             </div>\n         );\n     }\n }\n export default Input;"]},"metadata":{},"sourceType":"module"}