{"ast":null,"code":"var _jsxFileName = \"/home/kriti/Online-Examination-AI-ML/src/testinstruc.js\";\n// before the timer starts take user name as input\nimport React from 'react';\nimport history from './history.js';\nimport Input from './input.js';\nimport Recorder from './Recorder';\nexport default class TestInstruc extends React.Component {\n  constructor() {\n    super();\n\n    this.onInputChange = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.state = {\n      name: '',\n      test: '',\n      start: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Recorder, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }), this.state.test === '' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"Instructions for giving the Examination\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }, \"There are three questions in the test\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, \"You have 10 minutes to answer all the questions\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, \"After 10 minutes the answers get submitted automatically\"))), /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"All the Best!\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control m-3\",\n      style: {\n        width: 200\n      },\n      name: \"name\",\n      onChange: this.onInputChange,\n      value: this.state.name,\n      type: \"text\",\n      placeholder: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: () => {\n        if (this.state.name == '') alert(\"Name field can't be empty\");else {\n          // history.push('./test');\n          localStorage.setItem('name', this.state.name);\n          this.setState({\n            test: true\n          });\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"Start\")) : /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 18\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/kriti/Online-Examination-AI-ML/src/testinstruc.js"],"names":["React","history","Input","Recorder","TestInstruc","Component","constructor","onInputChange","e","setState","name","target","value","state","test","start","render","width","alert","localStorage","setItem"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAGA,eAAe,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAAyC;AACpDC,EAAAA,WAAW,GACX;AACI;;AADJ,SASAC,aATA,GASeC,CAAD,IAAK;AACf,WAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAACF,CAAC,CAACG,MAAF,CAASC;AADJ,OAAd;AAGH,KAbD;;AAEI,SAAKC,KAAL,GAAY;AACRH,MAAAA,IAAI,EAAC,EADG;AAERI,MAAAA,IAAI,EAAC,EAFG;AAGRC,MAAAA,KAAK,EAAC;AAHE,KAAZ;AAKH;;AAODC,EAAAA,MAAM,GACN;AACI,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,KAAKH,KAAL,CAAWC,IAAX,KAAkB,EAAlB,gBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAHJ,CADJ,CAFA,eASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,eAEA;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,KAAK,EAAE;AAACG,QAAAA,KAAK,EAAC;AAAP,OAA3C;AAAwD,MAAA,IAAI,EAAC,MAA7D;AAAoE,MAAA,QAAQ,EAAE,KAAKV,aAAnF;AAAkG,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWH,IAApH;AAA4H,MAAA,IAAI,EAAC,MAAjI;AAAwI,MAAA,WAAW,EAAC,MAApJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CATA,eAaA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AACA,MAAA,OAAO,EAAE,MAAI;AACT,YAAG,KAAKG,KAAL,CAAWH,IAAX,IAAiB,EAApB,EACIQ,KAAK,CAAC,2BAAD,CAAL,CADJ,KAEI;AACL;AACCC,UAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4B,KAAKP,KAAL,CAAWH,IAAvC;AACA,eAAKD,QAAL,CAAc;AAACK,YAAAA,IAAI,EAAE;AAAP,WAAd;AACE;AACL,OATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAbA,CAFA,gBA4BC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BL,CADJ;AAoCH;;AAtDmD","sourcesContent":["// before the timer starts take user name as input\nimport React from 'react';\nimport history from './history.js';\nimport Input from './input.js';\nimport Recorder from './Recorder';\n \n\nexport default class TestInstruc extends React.Component{\n    constructor()\n    {\n        super();\n        this.state ={\n            name:'',\n            test:'',\n            start:\"\",\n        }\n    }\n\n    onInputChange=(e)=>{\n        this.setState({\n            name:e.target.value\n        });\n    }\n    render()\n    {\n        return(\n            <div>\n                <Recorder/>\n                {\n                this.state.test===''?\n\n                <div>\n                <h3>Instructions for giving the Examination</h3>\n                <div>\n                    <ul>\n                        <li>There are three questions in the test</li>\n                        <li>You have 10 minutes to answer all the questions</li>\n                        <li>After 10 minutes the answers get submitted automatically</li>\n                    </ul>\n                </div>\n                <center>\n                <h4>All the Best!</h4>\n                <input className=\"form-control m-3\" style={{width:200}} name=\"name\" onChange={this.onInputChange} value={this.state.name}   type=\"text\" placeholder=\"Name\" />\n                </center>\n                <button type=\"button\" className=\"btn btn-primary\" \n                onClick={()=>{\n                    if(this.state.name=='')\n                        alert(\"Name field can't be empty\")\n                    else{\n                   // history.push('./test');\n                    localStorage.setItem('name',this.state.name)\n                    this.setState({test :true})\n                     }\n                }}\n                 >Start</button>\n                 </div>\n                 :\n                 <Input/>\n            }\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}