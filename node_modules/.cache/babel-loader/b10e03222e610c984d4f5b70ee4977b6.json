{"ast":null,"code":"var _jsxFileName = \"/home/kriti/Online-Examination-AI-ML/src/Recorder.js\";\nimport React from 'react';\nimport MediaCapturer from 'react-multimedia-capture';\nimport ReactPlayer from 'react-player';\nimport axios from 'axios';\nexport default class Recorder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRequest = () => {\n      console.log('Request Recording...');\n    };\n\n    this.handleGranted = () => {\n      this.setState({\n        granted: true\n      });\n      console.log('Permission Granted!');\n    };\n\n    this.handleDenied = err => {\n      this.setState({\n        rejectedReason: err.name\n      });\n      console.log('Permission Denied!', err);\n    };\n\n    this.handleStart = stream => {\n      this.setState({\n        recording: true\n      });\n      this.setStreamToVideo(stream);\n      console.log('Recording Started.');\n    };\n\n    this.handleStop = blob => {\n      this.setState({\n        recording: false\n      });\n      this.releaseStreamFromVideo();\n      console.log('Recording Stopped.');\n      this.downloadVideo(blob);\n    };\n\n    this.handleError = err => {\n      console.log(err);\n    };\n\n    this.handleStreamClose = () => {\n      this.setState({\n        granted: false\n      });\n    };\n\n    this.setStreamToVideo = stream => {\n      let video = this.refs.app.querySelector('video');\n\n      if (window.URL) {\n        video.srcObject = stream;\n      } else {\n        video.src = stream;\n      }\n    };\n\n    this.releaseStreamFromVideo = () => {\n      this.refs.app.querySelector('video').src = '';\n    };\n\n    this.downloadVideo = blob => {\n      let url = URL.createObjectURL(blob);\n      let a = document.createElement('a');\n      a.style.display = 'none';\n      a.href = url;\n      a.target = '_blank';\n      document.body.appendChild(a);\n      a.click();\n      var formData = new FormData();\n      var imagefile = document.querySelector('#file');\n      formData.append(\"video\", blob);\n      axios.post('http://localhost:5000/downloadVideo', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => {\n        console.log(response);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      granted: false,\n      rejectedReason: '',\n      recording: false,\n      paused: false\n    };\n  }\n\n  componentwillMount() {\n    if (this.props.start === \"start\") this.handleStart();\n    if (this.props.start === \"stop\") this.handleStop();\n  }\n\n  render() {\n    const granted = this.state.granted;\n    const rejectedReason = this.state.rejectedReason;\n    const recording = this.state.recording;\n    const paused = this.state.paused;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MediaCapturer, {\n      constraints: {\n        audio: false,\n        video: true\n      },\n      timeSlice: 10,\n      onGranted: this.handleGranted,\n      onDenied: this.handleDenied,\n      onStart: this.handleStart,\n      onStop: this.handleStop,\n      onError: this.handleError,\n      onStreamClosed: this.handleStreamClose,\n      render: ({\n        request,\n        start,\n        stop,\n        pause,\n        resume\n      }) => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }, \"Granted: \", granted.toString()), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }\n      }, \"Rejected Reason: \", rejectedReason), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }\n      }, \"Recording: \", recording.toString()), !granted && /*#__PURE__*/React.createElement(\"button\", {\n        onClick: request,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 38\n        }\n      }, \"Get Permission\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: start,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: stop,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }, \"Stop\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      }, \"Streaming test\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"video\", {\n        autoPlay: true,\n        style: {\n          height: 200,\n          width: 200\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/kriti/Online-Examination-AI-ML/src/Recorder.js"],"names":["React","MediaCapturer","ReactPlayer","axios","Recorder","Component","constructor","props","handleRequest","console","log","handleGranted","setState","granted","handleDenied","err","rejectedReason","name","handleStart","stream","recording","setStreamToVideo","handleStop","blob","releaseStreamFromVideo","downloadVideo","handleError","handleStreamClose","video","refs","app","querySelector","window","URL","srcObject","src","url","createObjectURL","a","document","createElement","style","display","href","target","body","appendChild","click","formData","FormData","imagefile","append","post","headers","then","response","catch","state","paused","componentwillMount","start","render","audio","request","stop","pause","resume","toString","height","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MediaCapturer from 'react-multimedia-capture';\nimport ReactPlayer from 'react-player';\nimport axios from 'axios';\n\nexport default class Recorder extends React.Component{\n    constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tgranted: false,\n\t\t\trejectedReason: '',\n\t\t\trecording: false,\n\t\t\tpaused: false\n        };\n\t}\n\tcomponentwillMount(){\n\t\tif(this.props.start===\"start\")\n\t\t this.handleStart();\n\t\tif(this.props.start===\"stop\")\n\t\t this.handleStop();\n\t}\n    handleRequest=()=> {\n\t\tconsole.log('Request Recording...');\n\t}\n\thandleGranted=()=> {\n\t\tthis.setState({ granted: true });\n\t\tconsole.log('Permission Granted!');\n\t}\n\thandleDenied=(err) =>{\n\t\tthis.setState({ rejectedReason: err.name });\n\t\tconsole.log('Permission Denied!', err);\n\t}\n\thandleStart=(stream)=> {\n\t\tthis.setState({\n\t\t\trecording: true\n\t\t});\n\n\t\tthis.setStreamToVideo(stream);\n\t\tconsole.log('Recording Started.');\n\t}\n\thandleStop=(blob) =>{\n\t\tthis.setState({\n\t\t\trecording: false\n\t\t});\n\n\t\tthis.releaseStreamFromVideo();\n\n        console.log('Recording Stopped.');\n\t\tthis.downloadVideo(blob);\n\t}\n\thandleError=(err)=> {\n\t\tconsole.log(err);\n\t}\n\thandleStreamClose=()=> {\n\t\tthis.setState({\n\t\t\tgranted: false\n\t\t});\n\t}\n\tsetStreamToVideo=(stream) =>{\n\t\tlet video = this.refs.app.querySelector('video');\n\t\t\n\t\tif(window.URL) {\n\t\t\tvideo.srcObject = stream\n\t\t}\n\t\telse {\n\t\t\tvideo.src = stream;\n\t\t}\n\t}\n\treleaseStreamFromVideo=() =>{\n\t\tthis.refs.app.querySelector('video').src = '';\n\t}\n\n\tdownloadVideo=(blob)=> {\n\t\tlet url = URL.createObjectURL(blob);\n\t\tlet a = document.createElement('a');\n\t\ta.style.display = 'none';\n\t\ta.href = url;\n\t\ta.target = '_blank';\n\t\tdocument.body.appendChild(a);\n        a.click();\n        var formData = new FormData();\n        var imagefile = document.querySelector('#file');\n        formData.append(\"video\", blob);\n        \n        axios.post('http://localhost:5000/downloadVideo', formData, {\n            headers: {\n            'Content-Type': 'multipart/form-data'\n            }\n        })\n\n            .then(response => {\n              console.log(response);\n            })\n            .catch(err => {\n              console.log(err);\n            });\n        \n\t}\n    render(){\n        const granted = this.state.granted;\n\t\tconst rejectedReason = this.state.rejectedReason;\n\t\tconst recording = this.state.recording;\n\t\tconst paused = this.state.paused;\n\n        return(\n            <div ref=\"app\">\n            <MediaCapturer\n                    constraints={{ audio: false, video: true }}\n                    timeSlice={10}\n                    onGranted={this.handleGranted}\n                    onDenied={this.handleDenied}\n                    onStart={this.handleStart}\n                    onStop={this.handleStop}\n                    onError={this.handleError}\n                    onStreamClosed={this.handleStreamClose}\n                    render={({ request, start, stop, pause, resume }) => \n                    <div>\n                        <p>Granted: {granted.toString()}</p>\n                        <p>Rejected Reason: {rejectedReason}</p>\n                        <p>Recording: {recording.toString()}</p>\n\n \n                        {!granted && <button onClick={request}>Get Permission</button>}\n                        <button onClick={start}>Start</button>\n                        <button onClick={stop}>Stop</button>\n                        \n                        <p>Streaming test</p>\n                        <div >\n                        <video autoPlay style={{height:200,width:200}} ></video>\n                        </div>\n                        </div>\n                    }/>\n                    </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}